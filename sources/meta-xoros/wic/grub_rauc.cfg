title=Select root drive/partition

default="MENU_RESCUE"
timeout=3

set ORDER="ROOTFS_A ROOTFS_B"
set SAVED=0
set ROOTFS_A_OK=0
set ROOTFS_B_OK=0
set ROOTFS_A_TRY=0
set ROOTFS_B_TRY=0
load_env

# select bootable slot
for SLOT in $ORDER; do
    if [ "$SLOT" == "ROOTFS_A" ]; then
        MENU_SELECT="MENU_ROOTFS_A"
        OK=$ROOTFS_A_OK
        TRY=$ROOTFS_A_TRY
        ROOTFS_A_TRY=1
    fi
    if [ "$SLOT" == "ROOTFS_B" ]; then
        MENU_SELECT="MENU_ROOTFS_B"
        OK=$ROOTFS_B_OK
        TRY=$ROOTFS_B_TRY
        ROOTFS_B_TRY=1
    fi
    if [ "$OK" -eq 1 -a "$TRY" -eq 0 ]; then
        default=$MENU_SELECT
        break
    fi
    if [ "$SAVED" -eq 0 ]; then
        # if there is no saved env data, select this slot as default
        default="MENU_ROOTFS_A"
        break
    fi
done

# reset booted flags
if [ "$default" -eq 0 ]; then
    if [ "$ROOTFS_A_OK" -eq 1 -a "$ROOTFS_A_TRY" -eq 1 ]; then
        ROOTFS_A_TRY=0
    fi
    if [ "$ROOTFS_B_OK" -eq 1 -a "$ROOTFS_B_TRY" -eq 1 ]; then
        ROOTFS_B_TRY=0
    fi
fi

SAVED=1

save_env SAVED ROOTFS_A_TRY ROOTFS_A_OK ROOTFS_B_TRY ROOTFS_B_OK ORDER

CMDLINE="console=ttyS0,115200 net.ifnames=0 panic=60"

menuentry "RootFS Slot A (OK=$ROOTFS_A_OK TRY=$ROOTFS_A_TRY)" --id=MENU_ROOTFS_A {
    linux /bzImage root=PARTLABEL=rootfs_a $CMDLINE rauc.slot=ROOTFS_A rootfstype=squashfs
}

menuentry "RootFS Slot B (OK=$ROOTFS_B_OK TRY=$ROOTFS_B_TRY)" --id=MENU_ROOTFS_B {
    linux /bzImage root=PARTLABEL=rootfs_b $CMDLINE rauc.slot=ROOTFS_B rootfstype=squashfs
}

menuentry "Rescue" --id=MENU_RESCUE {
    linux /bzImage root=PARTLABEL=rescue $CMDLINE rauc.slot=RESCUE
}
